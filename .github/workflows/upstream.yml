#
# This is free software, lisence use MIT.
# 
# 
# <https://github.com/kiddin9/openwrt-packages>
#

name: Merge-upstream
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'ssh'
        required: false
        default: 'true'
  repository_dispatch:

jobs:
  merge:
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    runs-on: Ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - uses: de-vri-es/setup-git-credentials@v2
      with:
        credentials: https://lishisheng0:${{ secrets.TOKEN_KIDDIN9 }}@github.com/
    
    - name: Set git identity
      run : |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"

    - name: Syn upstream
      run: |
        shopt -s extglob
        set +e
        git rm -r --cache * >/dev/null 2>&1 &
        rm -rf `find ./* -maxdepth 0 -type d ! -name ".github/diy"` >/dev/null 2>&1
        function git_clone() {
          git clone --depth 1 $1 $2
          if [ "$?" != 0 ]; then
            echo "error on $1"
            pid="$( ps -q $$ )"
            kill $pid
          fi
        }
        function git_sparse_clone() {
        trap 'rm -rf "$tmpdir"' EXIT
        branch="$1" curl="$2" && shift 2
        rootdir="$PWD"
        tmpdir="$(mktemp -d)" || exit 1
        if [ ${#branch} -lt 10 ]; then
        git clone -b "$branch" --depth 1 --filter=blob:none --sparse "$curl" "$tmpdir"
        cd "$tmpdir"
        else
        git clone --filter=blob:none --sparse "$curl" "$tmpdir"
        cd "$tmpdir"
        git checkout $branch
        fi
        if [ "$?" != 0 ]; then
            echo "error on $curl"
            exit 1
        fi
        git sparse-checkout init --cone
        git sparse-checkout set "$@"
        mv -n $@ $rootdir/ || true
        cd $rootdir
        }
        function mvdir() {
        mv -n `find $1/* -maxdepth 0 -type d` ./
        rm -rf $1
        }
        
        git_sparse_clone main https://github.com/kiddin9/kwrt-packages \
        chinadns-ng \
        cpufreq \
        ddns-go \
        luci-app-argon \
        luci-app-argon-config \
        luci-app-cpufreq \
        luci-app-ddns-go \
        luci-app-diskman \
        luci-app-dockerman \
        luci-app-homeproxy \
        luci-app-msd_lite \
        luci-app-samba4 \
        luci-app-socat \
        luci-app-temp-status \
        luci-app-upnp \
        vlmcsd \
        luci-app-vlmcsd \
        luci-app-wizard \
        luci-app-wolplus \
        luci-app-zerotier \
        msd_lite \
        sing-box
        
        # git_sparse_clone main https://github.com/sbwml/luci-app-alist alist luci-app-alist
        
    #- name: Delete duplicated packages
    #  run: |
    #    shopt -s extglob
    #    mv -n applications/!(luci-app-noddos|luci-app-openvpn-server|luci-app-kodexplorer|luci-app-cshark|luci-app-dnscrypt-proxy|luci-app-https-dns-proxy|luci-app-ssr-mudb-server|luci-app-ledtrig-*) ./ ; rm -Rf applications
    #    mv -n lean/!(r8101|r8125|r8126|r8168) ./ ; rm -Rf lean
    #    mv -n liep/* ./ ; rm -Rf liep
    #    mv -n openwrt-app-actions/applications/* ./;rm -rf openwrt-app-actions
    #    rm -Rf */.git
    #    for pkg in $(ls -d .github/diy/packages/*); do
    #      mv -f $pkg/Makefile.k $pkg/Makefile >/dev/null 2>&1 || true
    #    done
    #    cp -rf .github/diy/packages/* ./ || true
    #    for pkg in $(ls -d .github/diy/packages/*); do
    #      mv -f $pkg/Makefile $pkg/Makefile.k >/dev/null 2>&1 || true
    #    done
    #    sed -i 's/\r//g' luci-app-ua2f/Makefile

    - name: SSH connection to Actions
      uses: kiddin9/debugger-action@master
      if: github.event.inputs.ssh == 'true'

    #- name: Apply patches
    #  run: |
    #    find ".github/diy/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch" || (curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=❌ 软件包更新失败 😂 https://github.com/kiddin9/openwrt-packages/actions" "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage";exit 1)

    - name: Apply
      run: |
        Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")
        git add .
        git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
        for pkg in $(git diff-tree --no-commit-id --name-only HEAD); do
          if [ "$(grep "PKG_RELEASE" $pkg/Makefile)" ]; then
            sed -i "s/PKG_RELEASE:=.*/PKG_RELEASE:=$(git rev-list --count main $pkg)/" $pkg/Makefile || true
          fi
        done
        git reset --soft HEAD^
        git add .
        git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
        git push -f

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      continue-on-error: true
      with:
        retain_days: 1
        keep_minimum_runs: 3
